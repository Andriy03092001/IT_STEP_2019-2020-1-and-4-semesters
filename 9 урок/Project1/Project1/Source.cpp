#include <iostream>
#include "windows.h"

using namespace std;

int main() {

	

	for (;;) {
		cout << R"(__________________________________8888__________888\n)"
			"____________________________________888_______8888\n"
			"_____________________________________8888____8888\n"
			"______________________________________8888__888\n"
			"_______________________________________888__88\n"
			"8________________________________________8__8_8888\n"
			"88_____________________________________888888888\n"
			"888__________________________________8888888888888\n"
			"8888_________________________________88888888 | _#_ | 888\n"
			"_888_________________________________8888888888888888888888\n"
			"___8_________________________________888888888888888888 | _ | 88\n"
			"____88______________________________888888888888888888888888\n"
			"_____88___________________________8888__8888888888888888888\n"
			"______88888888________88888888888888______88888888888\n"
			"______888888888888888888888888888888_______________8888\n"
			"_____888888888888888888888888888888\n"
			"_____888888888888888888888888888888\n"
			"_____888888888888888888888888888888\n"
			"_____88888888888888888888888888888\n"
			"_______888888888888888888888888888\n"
			"_______88___88_____________88__88\n"
			"_______88___88_____________88__88\n"
			"_______88_88_______________88_88\n"
			"_______88_88_______________88_88\n"
			"_______8888_______________888_888\n"
			"______88_88_______________88_88" << endl;

		Sleep(300);

		system("cls");

		cout << "__________________________________8888__________888\n"
			"____________________________________888_______8888\n"
			"_____________________________________8888____8888\n"
			"______________________________________8888__888\n"
			"_______________________________________888__88\n"
			"_____8___________________________________8__8_8888\n"
			"______88_______________________________888888888\n"
			"_______888___________________________8888888888888\n"
			"________888__________________________88888888 | _#_ | 888\n"
			"________888__________________________8888888888888888888888\n"
			"as_______88____________________________888888888888888888 | _ | 88\n"
			"______88____________________________888888888888888888888888\n"
			"_______88_________________________8888__8888888888888888888\n"
			"______88888888________88888888888888______88888888888\n"
			"______888888888888888888888888888888_______________8888\n"
			"_____888888888888888888888888888888\n"
			"_____888888888888888888888888888888\n"
			"_____888888888888888888888888888888\n"
			"_____88888888888888888888888888888\n"
			"_______888888888888888888888888888\n"
			"_______88___88_____________88__88\n"
			"_______88___88_____________88__88\n"
			"_______88____88___________88__88\n"
			"_______88_____88__________88__88\n"
			"______888_____888________888__888\n"
			"______88_______88________88____88" << endl;

		Sleep(300);

		system("cls");
	}

	system("pause");
	return 0;
}

// Додаткове завдання від мене
/*#include <iostream>
#include "windows.h"

using namespace std;

int main() {

	int i = 1;

	while (true) {
		if (i % 10 == 0) {
			system("cls");
		}
		cout << " * ";
		i++;
		Sleep(300);
	}

	system("pause");
	return 0;
}*/

/*#include <iostream>

using namespace std;

int main() {

	int temp;
	int max = 0;
	int min = 0;

	for (int i = 1; i <= 7; i++) {
		cout << "Enter temperature of " << i << " day->_ ";
		cin >> temp;
		if (max < temp) {
			max = temp;
		}
		if (min > temp) {
			min = temp;
		}
	}

	cout << "min: " << min << endl;
	cout << "max: " << max << endl;

	system("pause");
	return 0;
}*/

/*#include <iostream>
#include <ctime>

using namespace std;

int main() {

	srand(time(0));

	int random_number;

	int i = 0;
	int count3 = 0;
	int count7 = 0;

	while (i < 10) {
		random_number = rand() % 151 + 50;
		cout << random_number << endl;

		if (random_number % 3 == 0) {
			count3++;
		}
		if (!(random_number % 7 == 0)) {
			count7++;
		}

		i++;
	}

	cout << endl << count3 << " numbers multiples three" << endl;
	cout << count7 << " numbers multiples seven" << endl;

	system("pause");
	return 0;
}*/